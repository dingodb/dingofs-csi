name: Release Artifact

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'

jobs:
  build:
    if: ${{ !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Record event type
        run: |
          branchName=$(echo "${{ github.ref_name }}")
          echo "branch name is: $branchName"
          echo "BRANCH_NAME=$branchName" >> $GITHUB_ENV

          echo "hello dingo eureka" > event.txt
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "EVENT_TYPE=PR" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "push" ]; then
            if [[ "${{ github.ref }}" == refs/tags/* ]]; then
              echo "EVENT_TYPE=TAG" >> $GITHUB_ENV
              tagInfo=echo "${{ github.ref }}" | sed 's/refs\/tags\///'
              echo "TAG_NAME=$tagInfo" >> $GITHUB_ENV
            else
              echo "EVENT_TYPE=PUSH" >> $GITHUB_ENV
              echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
            fi
          fi
      
      - name: Set Safe Dir
        run: git config --global --add safe.directory $PWD

      - name: Install golang and musl-tools
        run: |
          sudo apt-get update
          sudo apt-get install -y golang musl-tools
 
      - name: Build binary
        id: build-binary
        run: |
          make csi

      - name: Check build status
        if: steps.build-binary.conclusion != 'success'
        run: |
          echo "Build failed, stopping the workflow."
          exit 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: dingodatabase/dingofs-csi
          tags: |
            type=raw,enable=${{ env.EVENT == 'tag' }},value=${{ env.TAG_NAME }}
            type=raw,value=latest,enable=${{ env.BRANCH_NAME == 'main' && env.EVENT != 'tag'}}
            type=sha,prefix=,format=short,enable=${{ env.EVENT != 'tag' && env.BRANCH_NAME == 'main' }}
            type=raw,prefix=${{ env.BRANCH_NAME }}-,value=${{ env.COMMIT_ID }},enable=${{ env.EVENT != 'tag' && env.BRANCH_NAME != 'main' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}